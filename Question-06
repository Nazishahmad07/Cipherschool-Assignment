#include <iostream>
using namespace std;

void adaptiveBubbleSort(int arr[], int n, int &total_swaps, int &total_passes) {
    total_swaps = 0;
    total_passes = 0;
    
    for (int i = 0; i < n - 1; i++) {
        bool swapped = false;
        total_passes++;
        
        for (int j = 0; j < n - 1 - i; j++) {
            if (arr[j] > arr[j + 1]) {
                swap(arr[j], arr[j + 1]); // Swap elements
                total_swaps++;
                swapped = true;
            }
        }
        
        // If no swaps were made, the array is already sorted
        if (!swapped)
            break;
    }
}

int main() {
    int N = 5;
    int arr[] = {64, 34, 25, 12, 22};
    int swaps, passes;
    
    adaptiveBubbleSort(arr, N, swaps, passes);
    
    cout << "Sorted Array: ";
    for (int i = 0; i < N; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
    cout << "Total Swaps: " << swaps << endl;
    cout << "Total Passes: " << passes << endl;
    
    return 0;
}
